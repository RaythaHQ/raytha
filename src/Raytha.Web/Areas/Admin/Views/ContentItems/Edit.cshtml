@using Microsoft.AspNetCore.Authorization
@using Raytha.Domain.Entities
@using Raytha.Web.Utils;
@using Raytha.Web.Authentication;
@inject IAuthorizationService AuthorizationService
@model ContentItemsEdit_ViewModel
@{
    ViewData["Title"] = $"{Model.CurrentView.ContentTypeLabelPlural} > Edit {Model.CurrentView.ContentTypeLabelSingular.ToLower()}";
}

@section headstyles
{
    <link href="~/raytha_admin/css/trix.css" rel="stylesheet" />
    <link href="~/raytha_admin/css/uppy.core.css" rel="stylesheet" />
    <link href="~/raytha_admin/css/uppy.plugins.css" rel="stylesheet" />
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
    Description = Model.CurrentView.ContentTypeDescription
}))

<div class="row mb-4">
    <div class="col-xxl-7 col-xl-8 col-lg-9 col-md-12">
        <div class="card border-0 shadow mb-4">
            <div class="card-body">
                @(await Html.PartialAsync("_BackToList", new ContentItemsBackToList_ViewModel
                {
                    ContentTypeDeveloperName = Model.CurrentView.ContentTypeDeveloperName,
                    IsEditing = true,
                    IsDraft = Model.IsDraft,
                    IsPublished = Model.IsPublished,
                    BackToListUrl = Model.BackToListUrl
                }))
                @if (!(await AuthorizationService.AuthorizeAsync(User, Model.CurrentView.ContentTypeDeveloperName, ContentItemOperations.Edit)).Succeeded)
                {
                    <div class="alert alert-warning">
                        Your permissions are limited to readonly.
                    </div>

                    <form>
                        <div>
                            @for (int i = 0; i < Model.FieldValues.Count(); i++)
                            {
                                <div class="col-lg-12 col-md-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                    <div class="mb-3">
                                        <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                        <div class="row">
                                            <div class="col">
                                                @Html.Raw(@Model.FieldValues[i].Value)
                                            </div>
                                        </div>
                                        @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                        {
                                            <div class="form-text">@Model.FieldValues[i].Description</div>
                                        }
                                    </div>
                                </div>                            
                            }
                        </div>      
                    </form>
                }
                else
                {
                    <form asp-route="contentitemsedit" method="post">
                        <div>
                            @for (int i = 0; i < Model.FieldValues.Count(); i++)
                            {
                                @if (Model.FieldValues[i].FieldType == "single_line_text")
                                {
                                    <div class="col-lg-12 col-md-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <input type="text" class="form-control @Model.HasError(Model.FieldValues[i].DeveloperName)" asp-for="@Model.FieldValues[i].Value">
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "dropdown")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <select class="form-select @Model.HasError(Model.FieldValues[i].DeveloperName)" asp-for="@Model.FieldValues[i].Value">
                                                <option value="">-- SELECT --</option>
                                                @foreach (var availableChoice in Model.FieldValues[i].AvailableChoices)
                                                {
                                                    @if (availableChoice.Disabled)
                                                    {
                                                        <option value="@availableChoice.Value" disabled="">@availableChoice.Label (disabled)</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@availableChoice.Value">@availableChoice.Label</option>
                                                    }
                                                }
                                            </select>
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "radio")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            @{
                                                var lastItem = Model.FieldValues[i].AvailableChoices.LastOrDefault();
                                            }
                                            @foreach (var availableChoice in Model.FieldValues[i].AvailableChoices)
                                            {
                                                <div class="form-check">
                                                    @if (availableChoice.Disabled)
                                                    {
                                                        <input class="form-check-input @Model.HasError(Model.FieldValues[i].DeveloperName)" type="radio" asp-for="@Model.FieldValues[i].Value" value="@availableChoice.DeveloperName" disabled="">
                                                    }
                                                    else
                                                    {
                                                        <input class="form-check-input @Model.HasError(Model.FieldValues[i].DeveloperName)" type="radio" asp-for="@Model.FieldValues[i].Value" value="@availableChoice.DeveloperName">
                                                    }
                                                    <label class="form-check-label" asp-for="@Model.FieldValues[i].Value">@availableChoice.Label</label>
                                                    @if (availableChoice == lastItem)
                                                    {
                                                        <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                                    }
                                                </div>
                                            }

                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "number")
                                {
                                    <div class="col-lg-3 col-md-4 col-sm-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <input type="text" pattern="[0-9]+([\.,][0-9]+)?" class="form-control @Model.HasError(Model.FieldValues[i].DeveloperName)" asp-for="@Model.FieldValues[i].Value">
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "checkbox")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <div class="form-check form-switch">
                                                <input class="form-check-input @Model.HasError(Model.FieldValues[i].DeveloperName)" type="checkbox" asp-for="@Model.FieldValues[i].Value">
                                                <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            </div>

                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "multiple_select")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            @for (var j = 0; j < Model.FieldValues[i].AvailableChoices.Count(); j++)
                                            {
                                                <div class="form-check">
                                                    @if (Model.FieldValues[i].AvailableChoices[j].Disabled)
                                                    {
                                                        <input class="form-check-input  @Model.HasError(Model.FieldValues[i].DeveloperName)" type="checkbox" asp-for="@Model.FieldValues[i].AvailableChoices[j].Value" disabled="">
                                                    }
                                                    else
                                                    {
                                                        <input class="form-check-input  @Model.HasError(Model.FieldValues[i].DeveloperName)" type="checkbox" asp-for="@Model.FieldValues[i].AvailableChoices[j].Value">
                                                    }

                                                    <label class="form-check-label" asp-for="@Model.FieldValues[i].AvailableChoices[j].DeveloperName">@Model.FieldValues[i].AvailableChoices[j].Label</label>
                                                    @if (j == Model.FieldValues[i].AvailableChoices.Count() - 1)
                                                    {
                                                        <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                                    }
                                                </div>
                                                <input type="hidden" asp-for="@Model.FieldValues[i].AvailableChoices[j].DeveloperName" />
                                            }
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "date")
                                {
                                    <div class="col-lg-3 col-md-4 col-sm-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <div class="input-group has-validation">
                                                <span class="input-group-text">
                                                    <svg class="icon icon-xs text-gray-600" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg>
                                                </span>
                                                <input data-datepicker="" class="form-control datepicker-input @Model.HasError(Model.FieldValues[i].DeveloperName)" asp-for="@Model.FieldValues[i].Value" type="text">
                                                <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            </div>

                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "long_text")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName" 
                                     data-controller="contentitems--longtext"
                                     data-contentitems--longtext-mimetypes-value="@Model.AllowedMimeTypes"
                                     data-contentitems--longtext-usedirectuploadtocloud-value="@Model.UseDirectUploadToCloud"
                                     data-contentitems--longtext-maxfilesize-value="@Model.MaxFileSize"
                                     data-contentitems--longtext-pathbase-value="@Model.PathBase">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <input class="@Model.HasError(Model.FieldValues[i].DeveloperName)" id="input-@Model.FieldValues[i].DeveloperName" value="@Model.FieldValues[i].Value" type="hidden" asp-for="@Model.FieldValues[i].Value">
                                            <trix-toolbar id="trix-toolbar-@Model.FieldValues[i].DeveloperName" data-contentitems--longtext-target="toolbar">
                                            </trix-toolbar>
                                            <trix-editor toolbar="trix-toolbar-@Model.FieldValues[i].DeveloperName" class="trix-content" input="input-@Model.FieldValues[i].DeveloperName" data-contentitems--longtext-target="editor" data-developername="@Model.FieldValues[i].DeveloperName"></trix-editor>
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "wysiwyg")
                                {
                                    <div class="col-lg-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName"
                                     data-controller="contentitems--wysiwyg"
                                     data-contentitems--attachment-pathbase-value="@Model.PathBase">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <textarea data-contentitems--wysiwyg-target="editor" data-developername="@Model.FieldValues[i].DeveloperName" id="input-@Model.FieldValues[i].DeveloperName" asp-for="@Model.FieldValues[i].Value"></textarea>
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "attachment")
                                {
                                    <div class="col-lg-12 col-md-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName"
                                    data-controller="contentitems--attachment"
                                    data-contentitems--attachment-fieldid-value="@Model.FieldValues[i].DeveloperName"
                                    data-contentitems--attachment-mimetypes-value="@Model.AllowedMimeTypes"
                                    data-contentitems--attachment-usedirectuploadtocloud-value="@Model.UseDirectUploadToCloud"
                                    data-contentitems--attachment-maxfilesize-value="@Model.MaxFileSize"
                                    data-contentitems--attachment-pathbase-value="@Model.PathBase">
                                        <div class="mb-3">
                                            <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                            <div id="@(Model.FieldValues[i].DeveloperName)-uppy" data-contentitems--attachment-target="uppyContainer"></div>
                                            <div id="@(Model.FieldValues[i].DeveloperName)-uppy-progress" data-contentitems--attachment-target="uppyProgress"></div>
                                            <div data-contentitems--attachment-target="uppyInfo" hidden>
                                                <p data-contentitems--attachment-target="uppyInfoObjectKey">@Model.FieldValues[i].Value</p>
                                                <a class="btn btn-primary" asp-route="mediaitemsredirecttofileurlbyobjectkey" asp-route-objectKey="@Model.FieldValues[i].Value" data-contentitems--attachment-target="viewFile" target="_blank">View file</a>
                                                <button data-contentitems--attachment-target="removeButton" hidden class="btn btn-sm text-danger" type="button" data-action="click->contentitems--attachment#clear"><svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg> Remove</button>
                                            </div>
                                            @if (!string.IsNullOrEmpty(Model.HasError(Model.FieldValues[i].DeveloperName)))
                                            {
                                                <div class="text-danger">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            }

                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                            <input type="hidden" class="@Model.HasError(Model.FieldValues[i].DeveloperName)" asp-for="@Model.FieldValues[i].Value" data-contentitems--attachment-target="hidden" />
                                        </div>
                                    </div>
                                }
                                else if (Model.FieldValues[i].FieldType == "one_to_one_relationship")
                                {
                                    <div class="col-lg-12 col-md-12 mt-4" id="raytha_field-@Model.FieldValues[i].DeveloperName">
                                        <div class="mb-3" data-controller="shared--autocomplete" data-shared--autocomplete-src-value="@Model.PathBase/raytha/@Model.CurrentView.ContentTypeDeveloperName/relationship/autocomplete" data-shared--autocomplete-contenttype-value="@Model.FieldValues[i].RelatedContentTypeId">
                                            <div>
                                                <label class="form-label @Model.FieldValues[i].AsteriskCssIfRequired" asp-for="@Model.FieldValues[i].Label">@Model.FieldValues[i].Label</label>
                                                <div class="spinner-border spinner-border-sm mt-1 ml-2" role="status" data-shared--autocomplete-target="customerspinner">
                                                    <span class="visually-hidden">Loading pages...</span>
                                                </div>
                                            </div>

                                            <button class="btn btn-primary btn-sm" type="button"
                                        data-shared--autocomplete-target="addRecordButton"
                                        data-action="click->shared--autocomplete#addRecord">
                                                <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg> Add relationship
                                            </button>

                                            <div class="input-group mb-3" data-shared--autocomplete-target="selectedLabelSection">
                                                <input type="text" class="form-control" value="@Model.FieldValues[i].RelatedContentItemPrimaryField" data-shared--autocomplete-target="selectedLabel" disabled>
                                                <button class="nav-link d-inline-flex align-items-center justify-content-center text-danger" type="button" data-action="click->shared--autocomplete#removeRecord"><svg class="icon icon-sm mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg> Remove</button>
                                            </div>

                                            <input type="text" class="form-control @Model.HasError(Model.FieldValues[i].DeveloperName)" data-shared--autocomplete-target="input">
                                            <ul class="list-group" data-shared--autocomplete-target="results"></ul>
                                            <div class="invalid-feedback">@Model.ErrorMessageFor(Model.FieldValues[i].DeveloperName)</div>
                                            @if (!string.IsNullOrEmpty(Model.FieldValues[i].Description))
                                            {
                                                <div class="form-text">@Model.FieldValues[i].Description</div>
                                            }
                                            <input type="hidden" asp-for="@Model.FieldValues[i].Value" data-shared--autocomplete-target="hidden" />
                                            <input type="hidden" asp-for="@Model.FieldValues[i].RelatedContentItemPrimaryField" data-shared--autocomplete-target="hiddenPrimaryField" />
                                        </div>
                                    </div>
                                }
                                <input type="hidden" asp-for="@Model.FieldValues[i].DeveloperName" />
                                <input type="hidden" asp-for="@Model.FieldValues[i].FieldType" />
                            }
                        </div>
                        <input type="hidden" asp-for="@Model.Id">
                        <div class="col-lg-12">
                            <button type="submit" class="btn btn-secondary" name="SaveAsDraft" value="true">Save as draft</button>
                            <button type="submit" class="btn btn-success mx-2" name="SaveAsDraft" value="false">Save and publish</button>
                        </div>
                    </form>
                    <br />

                    <br />
                    @if (Model.IsPublished)
                    {
                        <form method="post" asp-route="contentitemsunpublish" asp-route-id="@Model.Id" asp-route-contentTypeDeveloperName="@Model.CurrentView.ContentTypeDeveloperName">
                            <button class="btn btn-sm btn-link text-danger">
                                Unpublish @Model.CurrentView.ContentTypeLabelSingular.ToLower()
                            </button>
                        </form>
                    }
                    @if (Model.IsDraft)
                    {
                        <form method="post" asp-route="contentitemsdiscarddraft" asp-route-id="@Model.Id" asp-route-contentTypeDeveloperName="@Model.CurrentView.ContentTypeDeveloperName">
                            <button class="btn btn-sm btn-link text-danger">
                                Discard draft
                            </button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.CurrentView.ContentTypeDeveloperName, ContentItemOperations.Edit)).Succeeded)
    {
        @(
            await Html.PartialAsync("_ActionsMenu", new ContentItemsActionsMenu_ViewModel
                {
                    Id = Model.Id,
                    ContentTypeLabelSingular = Model.CurrentView.ContentTypeLabelSingular,
                    ContentTypeDeveloperName = Model.CurrentView.ContentTypeDeveloperName,
                    ActivePage = "Edit"
                })
            )
    }
</div>