@using Raytha.Application.Common.Interfaces
@inject ICurrentOrganization CurrentOrganization
@model List_ViewModel<ThemesListItem_ViewModel>
@{
    ViewData["Title"] = "Themes";
}

@(await Html.PartialAsync("_PageHeader", new PageHeader_ViewModel
{
    Title = ViewData["Title"].ToString(),
}))

<nav class="navbar navbar-expand-lg navbar-light raytha-view-nav raytha-border-top">
    <div class="container-fluid">
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item dropdown">
                    <button class="btn btn-gray-800 d-inline-flex align-items-center me-2 dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <svg class="icon icon-xs me-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                        New task
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li>
                            <a class="dropdown-item" asp-route="themescreate">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="icon icon-xs">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z" clip-rule="evenodd"></path>
                                </svg>
                                Create theme
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" asp-route="themesduplicate">
                                <svg class="icon icon-xs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                </svg>
                                Duplicate theme
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" asp-route="themesimportfromurl">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="icon icon-xs">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3" />
                                </svg>
                                Import from url
                            </a>
                        </li>
                    </ul>
                </li>
            </ul>
            <form class="d-flex">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" name="search" value="@Model.Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
</nav>

<div class="raytha-data-card mb-4">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table mb-0 rounded">
                <thead class="thead-light">
                    <tr>
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel
                        {
                            Model = Model,
                            PropertyName = "Title",
                            IsFirst = true,
                            DisplayName = ViewModelExtensions.GetDisplayName<ThemesListItem_ViewModel>(t => t.Title)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel
                        {
                            Model = Model,
                            PropertyName = "DeveloperName",
                            DisplayName = ViewModelExtensions.GetDisplayName<ThemesListItem_ViewModel>(t => t.DeveloperName)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel
                        {
                            Model = Model,
                            PropertyName = "Description",
                            DisplayName = ViewModelExtensions.GetDisplayName<ThemesListItem_ViewModel>(t => t.Description)
                        }))
                        @(await Html.PartialAsync("_TableColumnHeader", new TableColumnHeader_ViewModel
                        {
                            Model = Model,
                            PropertyName = "LastModificationTime",
                            DisplayName = ViewModelExtensions.GetDisplayName<ThemesListItem_ViewModel>(t => t.LastModificationTime)
                        }))
                        <th class="border-0">
                            Last modified by
                        </th>
                        <th class="border-0 rounded-end">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@item.Title</td>
                            <td>@item.DeveloperName</td>
                            <td>@item.Description</td>
                            <td>@item.LastModificationTime</td>
                            <td>@item.LastModifierUser</td>
                            <td>
                                <a asp-route="themesedit" asp-route-id="@item.Id">Edit</a>
                                @if (CurrentOrganization.ActiveThemeId == item.Id)
                                {
                                    <svg class="icon icon-xs" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25" />
                                    </svg>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <partial name="_TablePagination" model="@Model" />
        </div>
    </div>
</div>

